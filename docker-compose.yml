version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: cdr-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cdr_db
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - cdr-network

  # Kafka and Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: cdr-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - cdr-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: cdr-kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - cdr-network

  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: cdr-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://mysql:3306/keycloak
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: root
    ports:
      - "8081:8080"
    command: start-dev
    depends_on:
      - mysql
    networks:
      - cdr-network

  # Backend Service
  ms-backend:
    build:
      context: ./ms-backend
      dockerfile: Dockerfile
    container_name: cdr-backend
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/cdr_db?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080/auth
      SERVER_PORT: 8082
    depends_on:
      - mysql
      - kafka
      - keycloak
    networks:
      - cdr-network

  # Loader Service
  ms-loader:
    build:
      context: ./ms-loader
      dockerfile: Dockerfile
    container_name: cdr-loader
    volumes:
      - ./ms-loader/input_files:/app/input_files
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cdr_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      - kafka
      - postgres
    networks:
      - cdr-network

  postgres:
    image: postgres:15
    container_name: cdr-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cdr_db
    ports:
      - "55432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cdr-network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    depends_on:
      - kafka

networks:
  cdr-network:
    driver: bridge

volumes:
  mysql_data:
  postgres_data: 